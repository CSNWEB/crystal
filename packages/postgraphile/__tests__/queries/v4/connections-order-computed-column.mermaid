graph TD
    classDef path fill:#eee,stroke:#000,color:#000
    classDef plan fill:#fff,stroke-width:3px,color:#000
    classDef itemplan fill:#fff,stroke-width:6px,color:#000
    classDef sideeffectplan fill:#f00,stroke-width:6px,color:#000
    classDef bucket fill:#f6f6f6,color:#000,stroke-width:6px,text-align:left


    %% define plans
    __Value0["__Value[0∈0]"]:::plan
    __Value3["__Value[3∈0]<br />ᐸcontextᐳ"]:::plan
    Access29["Access[29∈0]<br />ᐸ3.pgSettingsᐳ"]:::plan
    Access30["Access[30∈0]<br />ᐸ3.withPgClientᐳ"]:::plan
    Object31["Object[31∈0]<br />ᐸ{pgSettings,withPgClient}ᐳ"]:::plan
    Connection32["Connection[32∈0]<br />ᐸ28ᐳ"]:::plan
    PgSelect33[["PgSelect[33∈0]<br />ᐸpersonᐳ"]]:::plan
    __Item34>"__Item[34∈1]<br />ᐸ33ᐳ"]:::itemplan
    PgSelectSingle35["PgSelectSingle[35∈1]<br />ᐸpersonᐳ"]:::plan
    PgClassExpression36["PgClassExpression[36∈1]<br />ᐸ__person__.”id”ᐳ"]:::plan
    PgClassExpression37["PgClassExpression[37∈1]<br />ᐸ__person__...full_name”ᐳ"]:::plan
    Connection63["Connection[63∈0]<br />ᐸ59ᐳ"]:::plan
    PgSelect64[["PgSelect[64∈0]<br />ᐸpersonᐳ"]]:::plan
    __Item65>"__Item[65∈2]<br />ᐸ64ᐳ"]:::itemplan
    PgSelectSingle66["PgSelectSingle[66∈2]<br />ᐸpersonᐳ"]:::plan
    PgClassExpression67["PgClassExpression[67∈2]<br />ᐸ__person__.”id”ᐳ"]:::plan
    PgClassExpression68["PgClassExpression[68∈2]<br />ᐸ__person__...full_name”ᐳ"]:::plan

    %% plan dependencies
    __Value3 --> Access29
    __Value3 --> Access30
    Access29 & Access30 --> Object31
    Object31 & Connection32 --> PgSelect33
    PgSelect33 ==> __Item34
    __Item34 --> PgSelectSingle35
    PgSelectSingle35 --> PgClassExpression36
    PgSelectSingle35 --> PgClassExpression37
    Object31 & Connection63 --> PgSelect64
    PgSelect64 ==> __Item65
    __Item65 --> PgSelectSingle66
    PgSelectSingle66 --> PgClassExpression67
    PgSelectSingle66 --> PgClassExpression68

    %% plan-to-path relationships
    P0["~"]
    __Value0 -.-> P0
    P32["ᐳasc"]
    Connection32 -.-> P32
    P33["ᐳascᐳnodes"]
    PgSelect33 -.-> P33
    P35["ᐳascᐳnodes[]"]
    PgSelectSingle35 -.-> P35
    P36["ᐳascᐳn…]ᐳid"]
    PgClassExpression36 -.-> P36
    P37["ᐳascᐳn…]ᐳname"]
    PgClassExpression37 -.-> P37
    P63["ᐳdesc"]
    Connection63 -.-> P63
    P64["ᐳdescᐳnodes"]
    PgSelect64 -.-> P64
    P66["ᐳdescᐳnodes[]"]
    PgSelectSingle66 -.-> P66
    P67["ᐳdescᐳn…]ᐳid"]
    PgClassExpression67 -.-> P67
    P68["ᐳdescᐳn…]ᐳname"]
    PgClassExpression68 -.-> P68

    subgraph "Buckets for queries/v4/connections-order-computed-column"
    Bucket0("Bucket 0 (root)<br />~<br />⠀ROOT ᐸ-O- 0<br />⠀⠀asc ᐸ-O- 32<br />⠀⠀⠀asc.nodes ᐸ-A- 33<br />⠀⠀desc ᐸ-O- 63<br />⠀⠀⠀desc.nodes ᐸ-A- 64"):::bucket
    classDef bucket0 stroke:#696969
    class Bucket0,__Value0,__Value3,Access29,Access30,Object31,Connection32,PgSelect33,Connection63,PgSelect64 bucket0
    Bucket1("Bucket 1 (item34)<br />Deps: 33<br />~ᐳQuery.ascᐳPeopleConnection.nodes[]<br />⠀ROOT ᐸ-O- 35<br />⠀⠀id ᐸ-L- 36<br />⠀⠀name ᐸ-L- 37"):::bucket
    classDef bucket1 stroke:#00bfff
    class Bucket1,__Item34,PgSelectSingle35,PgClassExpression36,PgClassExpression37 bucket1
    Bucket2("Bucket 2 (item65)<br />Deps: 64<br />~ᐳQuery.descᐳPeopleConnection.nodes[]<br />⠀ROOT ᐸ-O- 66<br />⠀⠀id ᐸ-L- 67<br />⠀⠀name ᐸ-L- 68"):::bucket
    classDef bucket2 stroke:#7f007f
    class Bucket2,__Item65,PgSelectSingle66,PgClassExpression67,PgClassExpression68 bucket2
    Bucket0 --> Bucket1 & Bucket2
    end
